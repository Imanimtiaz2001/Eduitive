
class StateProviderClass extends ChangeNotifier {
  bool _isActive = false;

  bool get isActive => _isActive;

  void updateState(bool value) {
    _isActive = value;
    notifyListeners();
  }

  bool _isObscure = true;
  TextEditingController _emailController = TextEditingController();
  TextEditingController _passwordController = TextEditingController();
  bool _validateEmail = false;
  bool _validatePassword = false;

  bool get isObscure => _isObscure;
  TextEditingController get emailController => _emailController;
  TextEditingController get passwordController => _passwordController;
  bool get validateEmail => _validateEmail;
  bool get validatePassword => _validatePassword;

  void togglePasswordVisibility() {
    _isObscure = !_isObscure;
    notifyListeners();
  }

  void resetValidation() {
    _validateEmail = false;
    _validatePassword = false;
    notifyListeners();
  }


  void validateFields(BuildContext context) {
    _validateEmail = _emailController.text.isEmpty || !_isValidEmail(_emailController.text);
    _validatePassword = _passwordController.text.isEmpty;

    if (!_validateEmail && !_validatePassword) {
      // Login logic here
      // If successful, navigate to the next screen
      Navigator.pushReplacementNamed(context, '/home');
    }

    notifyListeners();
  }

  bool _isValidEmail(String email) {
    return email.contains('@');
  }
  void validatePassword1() {
    _validatePassword = _passwordController.text.length >= 8;
    notifyListeners();
  }
}